@page "/deletebook/{id:int}"
@using lab7.Shared.Models
@inject HttpClient httpClient

<h1>Delete book</h1>
@if(_book != null){
<EditForm Model="_book" OnValidSubmit="DeleteBook">
	<label>Name</label>
	<input value="@_book.Name" readonly />
	<br/>
	<label>Author</label>
	<input value="@_book.Author" readonly />
	<br/>
	<label>Price book</label>
	<input value="@_book.Price" readonly />
	<br/>
	<label>Year published</label>
	<input value="@_book.YearPublished" readonly />
	<br/>
	<button type="submit">Delete book</button>

</EditForm>
}
else{
	<h1>Book not found</h1>
}
<button><a href="/books">Return to all books</a></button>

@code {
	[Inject] NavigationManager navigationManager{ get; set; } = null!;
	[Parameter] public int id { get; set; }
	private Book? _book = new Book();

	protected override async Task OnParametersSetAsync()
	{
		if(id <= 0)
		{
			navigationManager.NavigateTo("/books");
		}
		_book = await httpClient.GetFromJsonAsync<Book>($"api/Book/{id}");
	}

	private async Task DeleteBook()
	{
		if (_book != null)
		{
			await httpClient.DeleteAsync($"api/Book/{_book.ID}");
		}
		navigationManager.NavigateTo("/books");
	}
}
