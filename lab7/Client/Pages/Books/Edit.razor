@page "/editbook/{id:int}"
@using lab7.Shared.Models
@inject HttpClient httpClient

@{
	if(id == 0)
	{
		<h1>Add book</h1>
	}
	else
	{
		<h1>Edit book</h1>
	}
}



<EditForm Model="_book" OnValidSubmit="EditBook">
	<label for="name">Name book</label>
	<InputText @bind-Value="_book.Name" id="name" />
	<br/>
	<label for="author">Author</label>
	<InputText @bind-Value="_book.Author" id="author" />
	<br/>
	<label>Price book</label>
	<InputNumber @bind-Value="_book.Price"  />
	<br/>
	<label>Year published</label>
	<InputNumber @bind-Value="_book.YearPublished"  />
	<br/>

	<DataAnnotationsValidator />
	<ValidationSummary />

	<button type="submit">Save chnages</button>
	<button><a href="/books">Return to all books</a></button>

</EditForm>

@code {
	[Inject] NavigationManager navigationManager{ get; set; } = null!;
	private Book? _book = new Book();
	[Parameter] public int id { get; set; }


	protected override async Task OnParametersSetAsync()
	{
		if(id < 0)
		{
			navigationManager.NavigateTo("/books");
		}

		if (id != 0)
		{
			_book = await httpClient.GetFromJsonAsync<Book>($"api/Book/{id}");
		}
	}

	private async Task EditBook()
	{
		if (id == 0)
		{
			if(_book!= null)
			{
				await httpClient.PostAsJsonAsync<Book>("api/Book/", _book);
			}
			else
			{
				navigationManager.NavigateTo("/books");
			}
		}
		else
		{
			if (_book != null)
			{
				await httpClient.PutAsJsonAsync<Book>($"api/Book/", _book);
			}
			else
			{
				navigationManager.NavigateTo("/books");
			}
		}
		navigationManager.NavigateTo("/books");
	}
}
